<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sus.dao.DormitoryMapper">
  <resultMap id="BaseResultMap" type="com.sus.bean.Dormitory">
    <result column="dormitory_Id" jdbcType="INTEGER" property="dormitoryId" />
    <result column="dormitory_Name" jdbcType="VARCHAR" property="dormitoryName" />
    <result column="floor_Id" jdbcType="INTEGER" property="floorId" />
  </resultMap>
  <resultMap id="WithFloor" type="com.sus.bean.Dormitory">
    <result column="dormitory_Id" jdbcType="INTEGER" property="dormitoryId" />
    <result column="dormitory_Name" jdbcType="VARCHAR" property="dormitoryName" />
    <result column="floor_Id" jdbcType="INTEGER" property="floorId" />
    <association property="floor" javaType="com.sus.bean.Floor">
      <id column="floor_Id" property="floorId"></id>
      <result column="floor_Name" property="floorName"></result>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dormitory_Id, dormitory_Name, floor_Id
  </sql>
  <sql id="WithFloor_Column_List">
    dormitory_Id, dormitory_Name, f.floor_Id,floor_Name
  </sql>
  <select id="selectByExampleWithFloor" resultMap="WithFloor">
    select
    <include refid="WithFloor_Column_List" />
    from dormitory as d LEFT JOIN floor as f on d.floor_Id=f.floor_Id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWith" resultMap="WithFloor">
    select
    <include refid="Base_Column_List" />
    from dormitory where floor_Id=#{floorId}
  </select>
  <select id="selectByExampleFloorWith" resultMap="WithFloor">
    select
    <include refid="WithFloor_Column_List" />
    from dormitory as d LEFT JOIN floor as f on d.floor_Id=f.floor_Id where d.floor_Id=#{floorId}
  </select>
  <select id="selectByExample" parameterType="com.sus.bean.DormitoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dormitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sus.bean.DormitoryExample">
    delete from dormitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sus.bean.Dormitory">
    insert into dormitory (dormitory_Id, dormitory_Name, floor_Id
      )
    values (#{dormitoryId,jdbcType=INTEGER}, #{dormitoryName,jdbcType=VARCHAR}, #{floorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sus.bean.Dormitory">
    insert into dormitory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dormitoryId != null">
        dormitory_Id,
      </if>
      <if test="dormitoryName != null">
        dormitory_Name,
      </if>
      <if test="floorId != null">
        floor_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dormitoryId != null">
        #{dormitoryId,jdbcType=INTEGER},
      </if>
      <if test="dormitoryName != null">
        #{dormitoryName,jdbcType=VARCHAR},
      </if>
      <if test="floorId != null">
        #{floorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sus.bean.DormitoryExample" resultType="java.lang.Long">
    select count(*) from dormitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dormitory
    <set>
      <if test="record.dormitoryId != null">
        dormitory_Id = #{record.dormitoryId,jdbcType=INTEGER},
      </if>
      <if test="record.dormitoryName != null">
        dormitory_Name = #{record.dormitoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.floorId != null">
        floor_Id = #{record.floorId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dormitory
    set dormitory_Id = #{record.dormitoryId,jdbcType=INTEGER},
      dormitory_Name = #{record.dormitoryName,jdbcType=VARCHAR},
      floor_Id = #{record.floorId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>