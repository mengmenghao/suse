<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sus.dao.WaterMapper">
  <resultMap id="BaseResultMap" type="com.sus.bean.Water">
    <result column="water_Stock" jdbcType="INTEGER" property="waterStock" />
    <result column="water_Reservation" jdbcType="INTEGER" property="waterReservation" />
    <result column="water_Extract" jdbcType="INTEGER" property="waterExtract" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    water_Stock, water_Reservation, water_Extract
  </sql>
  <select id="selectByExample" parameterType="com.sus.bean.WaterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from water
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sus.bean.WaterExample">
    delete from water
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sus.bean.Water">
    insert into water (water_Stock, water_Reservation, water_Extract
      )
    values (#{waterStock,jdbcType=INTEGER}, #{waterReservation,jdbcType=INTEGER}, #{waterExtract,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sus.bean.Water">
    insert into water
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="waterStock != null">
        water_Stock,
      </if>
      <if test="waterReservation != null">
        water_Reservation,
      </if>
      <if test="waterExtract != null">
        water_Extract,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="waterStock != null">
        #{waterStock,jdbcType=INTEGER},
      </if>
      <if test="waterReservation != null">
        #{waterReservation,jdbcType=INTEGER},
      </if>
      <if test="waterExtract != null">
        #{waterExtract,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sus.bean.WaterExample" resultType="java.lang.Long">
    select count(*) from water
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update water
    <set>
      <if test="record.waterStock != null">
        water_Stock = #{record.waterStock,jdbcType=INTEGER},
      </if>
      <if test="record.waterReservation != null">
        water_Reservation = #{record.waterReservation,jdbcType=INTEGER},
      </if>
      <if test="record.waterExtract != null">
        water_Extract = #{record.waterExtract,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update water
    set water_Stock = #{record.waterStock,jdbcType=INTEGER},
      water_Reservation = #{record.waterReservation,jdbcType=INTEGER},
      water_Extract = #{record.waterExtract,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>